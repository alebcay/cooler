#!/bin/bash

set -e                # exit on uncaught error
set +o histexpand     # don't expand history expressions

importTaps()
{
	while read p; do
		echo -ne "[ \033[1;34mINSTALLING\033[22;0m ] Configuring tap: $p"
		( brew tap "$p" >/dev/null 2>&1 && echo -e "\r\033[K[ \033[1;32mDONE\033[22;0m ] Configuring tap: $p" ) || echo -e "\r\033[K[ \033[1;31mFAILED\033[22;0m ] Configuring tap: $p"
	done < "$ARCDIR/tap.cr"
}

importCasks()
{
	while read p; do
		echo -ne "[ \033[1;34mINSTALLING\033[22;0m ] Installing cask: $p"
		( brew cask install "$p" >/dev/null 2>&1 && echo -e "\r\033[K[ \033[1;32mDONE\033[22;0m ] Installing cask: $p" ) || echo -e "\r\033[K[ \033[1;31mFAILED\033[22;0m ] Installing cask: $p"
	done < "$ARCDIR/cask.cr"
}

importBrews()
{
	while read p; do
		success=false
		echo -ne "[ \033[1;34mINSTALLING\033[22;0m ] Installing formula: $p"
		if brew install "$p" > /dev/null 2>&1
			then
			echo -e "\r\033[K[ \033[1;32mDONE\033[22;0m ] Installing formula: $p" && success=true
		else
			while read q; do
				if brew install "$q/$p" >/dev/null 2>&1
					then
					echo -e "\r\033[K[ \033[1;32mDONE\033[22;0m ] Installing formula: $q/$p" && success=true
				fi
			done < "$ARCDIR/tap.cr"
		fi
		if [ "$success" = "false" ]; then
			echo -e "\r\033[K[ \033[1;31mFAILED\033[22;0m ] Installing formula: $p"
		fi
	done < "$ARCDIR/brew.cr"
}

importPorts()
{
	while read p; do
		echo -ne "[ \033[1;34mINSTALLING\033[22;0m ] Installing port: $p"
		( sudo port install "$p" >/dev/null 2>&1 && echo -e "\r\033[K[ \033[1;32mDONE\033[22;0m ] Installing port: $p" ) || echo -e "\r\033[K[ \033[1;31mFAILED\033[22;0m ] Installing port: $p"
	done < "$ARCDIR/port.cr"
}

EXECDIR="$(pwd)"
if [ "$1" = "export" ]
	then
	echo -e "Creating working directory..."
	rm -rf "${2%.*}" >/dev/null ; mkdir "${2%.*}"
	pushd "${2%.*}" >/dev/null 2>&1
	if [ ! "$3" = "--no-brew" ]
		then
		echo -e "Reading configured taps..."
		brew tap > "tap.cr"
		echo -e "Reading installed formulae..."
		brew list | tr "  " "\n" > "brew.cr"
	fi
	if [ ! "$3" = "--no-cask" -a ! "$3" = "--no-brew" ]
		then
		echo -e "Reading installed casks..."
		brew cask list | tr "  " "\n" > "cask.cr"
	fi
	if [ ! "$3" = "--no-port" ]
		then
		echo -e "Reading installed ports..."
		port list installed | awk '{ print $1 }' > "port.cr"
	fi
	cd ..
	tar czvf "./$(basename "$2")" "$(basename "${2%.*}")" >/dev/null 2>&1
	echo -e "\033[1;32mYour Cooler bundle is at\033[1;33m $2\033[1;34m.\033[22;0m"
	popd >/dev/null 2>&1
	rm -rf "${2%.*}" >/dev/null 2>&1
	exit 0;
elif [ "$1" = "import" ]
	then
	if [ -e "$2" -o -e "$(dirname "${2%.*}")/$2).cb)" ]
		then
			pushd "$(dirname "${2%.*}")" >/dev/null 2>&1
			ARCDIR="${2%.*}"
			tar xzf "$2"
			if [ -s "${2%.*}/brew.cr" -a ! "$3" = "--no-brew" ]
				then
				[ -s "${2%.*}/brew.cr" ] && (( command -v brew >/dev/null 2>&1 && echo -e "\r\033[K[ \033[1;34mINSTALLING\033[22;0m ] Installing dependency: Homebrew" ) || (rm -rf /usr/local/Cellar /usr/local/.git ; brew cleanup >/dev/null 2>&1; yes | ruby -e "$(curl -fsSL https://raw.github.com/alebcay/cooler/master/installbrew)" >/dev/null 2>&1))
				if [ "$?" == 0 ]
					then
					echo -e "\r\033[K[ \033[1;32mDONE\033[22;0m ] Installing dependency: Homebrew"
				else
					echo -e "\r\033[K[ \033[1;31mFAILED\033[22;0m ] Installing dependency: Homebrew"
				fi
				echo -ne "[ \033[1;33mINSTALLING\033[22;0m ] Updating Homebrew"
				( brew update >/dev/null 2>&1 && echo -e "\r\033[K[ \033[1;32mDONE\033[22;0m ] Updating Homebrew" ) || echo -e "\r\033[K[ \033[1;31mFAILED\033[22;0m ] Updating Homebrew"
				echo -ne "[ \033[1;33mINSTALLING\033[22;0m ] Upgrading installed formulae"
				( brew upgrade >/dev/null 2>&1 && echo -e "\r\033[K[ \033[1;32mDONE\033[22;0m ] Upgrading installed formulae" ) || echo -e "\r\033[K[ \033[1;31mFAILED\033[22;0m ] Upgrading installed formulae"
				importTaps
				importBrews
			fi
			if [ -s "${2%.*}/cask.cr" -a ! "$3" = "--no-cask" -a ! "$3" = "--no-brew" ]
				then
				[ -s "${2%.*}/cask.cr" ] && ( echo -ne "[ \033[1;33mINSTALLING\033[22;0m ] Installing dependency: Homebrew-Cask" && ( brew install phinze/cask/brew-cask >/dev/null 2>&1 && echo -e "\r\033[K[ \033[1;32mDONE\033[22;0m ] Installing dependency: Homebrew-Cask" ) || echo -e "\r\033[K[ \033[1;31mFAILED\033[22;0m ] Installing dependency: Homebrew-Cask")
				importCasks
			fi
			if [ -s "${2%.*}/port.cr" -a ! "$3" = "--no-port" ]
				then
				if [[ "$EUID" != 0 ]]; then
				    echo "Administrator privileges are required to install MacPorts packages:"
				    sudo -E cooler importPorts "$2"
				fi
			fi
			popd >/dev/null 2>&1
			rm -rf "$ARCDIR"
	else
		echo -e "[ \033[1;31mFAILED\033[22;0m ] No such bundle: $2.cb" && exit 1
	fi
elif [ "$1" = "update" ]
	then
	if [ "$2" = "--dev"]
		then
		export COOLER_UPDATE_MODE="dev"
		curl -Ls https://raw.github.com/alebcay/cooler/master/installcooler | bash >/dev/null 2>&1
		echo -e "\033[1;32mCooler is now on the latest development version.\033[22;0m"
		echo -e "\033[1;32mRun \033[1;33mcooler update\033[1;32m to downgrade to the latest stable release.\033[22;0m"
	fi
	export COOLER_UPDATE_MODE="stable"
	curl -Ls https://raw.github.com/alebcay/cooler/master/installcooler | bash >/dev/null 2>&1
	echo -e "\033[1;32mCooler is now up to date.\033[22;0m"
elif [ "$1" = "importPorts" ]
	then
	ARCDIR="${2%.*}"
	importPorts
elif [ "$1" = "list" ]
	then
	if [ -e "$2" -o -e "$(dirname "${2%.*}")/$2" ]
		then
			pushd "$(dirname "${2%.*}")" >/dev/null 2>&1
			ARCDIR="${2%.*}"
			tar xzf "$2"
			echo -e "\033[1;34mContents of cooler.resource.brew: \033[22;0m"
			if [ -s "${2%.*}/brew.cr" ]
				then
				while read p; do
					echo "$p"
				done < "$ARCDIR/brew.cr"
			fi
			echo ""
			echo -e "\033[1;34mContents of cooler.resource.tap: \033[22;0m"
			if [ -s "${2%.*}/tap.cr" ]
				then
				while read p; do
					echo "$p"
				done < "$ARCDIR/tap.cr"
			fi
			echo ""
			echo -e "\033[1;34mContents of cooler.resource.cask: \033[22;0m"
			if [ -s "${2%.*}/cask.cr" ]
				then
				while read p; do
					echo "$p"
				done < "$ARCDIR/cask.cr"
			fi
			echo ""
			echo -e "\033[1;34mContents of cooler.resource.port: \033[22;0m"
			if [ -s "${2%.*}/port.cr" ]
				then
					while read p; do
						echo "$p"
					done < "$ARCDIR/port.cr"
			fi
			popd >/dev/null 2>&1
			rm -rf "$ARCDIR"
	else
		echo -e "[ \033[1;31mFAILED\033[22;0m ] No such bundle: $2" && exit 1
	fi
else
	echo "cooler - homebrew/homebrew-cask package migration and transport"
	echo "usage: cooler [import/export] coolerBundleName <flags>"
fi